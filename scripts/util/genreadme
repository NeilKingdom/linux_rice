#!/bin/sh
#
# NOTE: This script assumes the existence of an environment
# variable "$DEVEL_DIR" which contains the absolute path
# towards the user's development directory where projects
# are stored. If you do not have this directory you may
# export it manually. Note that DEVEL_DIR should not be the
# project root directory, but rather, the directory above
# it. For example, if your project's root directory is
# located at /home/user/foo/bar, then you should export
# DEVEL_DIR as /home/user/foo before running this script.
#
# Dependencies: figlet

source "$HOME/scripts/res/loadres"
RESOURCE="README_SKEL.md"
README_SKEL="$SCRIPT_RES/$RES_SUBDIR/$RESOURCE"

# Get the name of the root directory
ROOT_NAME="${PWD#"$DEVEL_DIR"/}"
ROOT_NAME="$(echo "$ROOT_NAME" | cut -d '/' -f1)"
# Get the absolute path to the root directory
PROJECT_ROOT="$(pwd | sed "s/\($ROOT_NAME\).*/\1/")"

if [ -f "$PROJECT_ROOT"/README.md ]
then
   echo "README.md already exists in project root. Overwrite?"; read -r ANS
   [ "$ANS" != "y" ] && \
   [ "$ANS" != "Y" ] && \
   [ "$ANS" != "yes" ] && \
   [ "$ANS" != "YES" ] && \
   [ "$ANS" != "Yes" ] && echo "Exiting..." && exit 0
fi

# Use figlet to output banner name into README.md
i=1
BANNER="$(figlet "$ROOT_NAME")"
LINES="$(echo "$BANNER" | wc -l)"

printf "<pre><code>" > "$PROJECT_ROOT"/README.md
while [ "$i" -lt "$LINES" ]
do
   LINE="$(echo "$BANNER" | sed "$i"q\;d)"
   printf "\n %s" "$LINE" >> "$PROJECT_ROOT"/README.md
   i=$((i+1))
done
printf "\n</code></pre>\n\n" >> "$PROJECT_ROOT"/README.md

cat "$README_SKEL" >> "$PROJECT_ROOT"/README.md
exit 0
