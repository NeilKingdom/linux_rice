#!/bin/sh
#
# Description: Scaffold a working directory for a new C project
# Dependencies: genreadme, lynx, doxygen, git, clangd

usage() {
    printf "%s\n%s\n\n" \
        "Usage: $(basename "$0") [project_dir]" \
        "Note: If project_dir is not specified, cproj will attempt to use the current directory if empty"
    exit 0
}

PROJ_DIR="$1"

# If using current directory, check that it's empty
[ -z "$PROJ_DIR" ] && \
[ "$(find . -maxdepth 1 -exec echo \; | wc -l)" -gt 1 ] && \
usage && exit 1

[ -n "$PROJ_DIR" ] && ! [ -d "$PROJ_DIR" ] && mkdir "$PROJ_DIR"
cd "$PROJ_DIR" || exit 1

# Check if the project will be a library
while
    printf "Is the project a library? [y/n] "; read -r IS_LIB
    IS_LIB="$(echo "$IS_LIB" | tr '[:upper:]' '[:lower:]')"
    [ "$IS_LIB" != "y" ] && \
    [ "$IS_LIB" != "yes" ] && \
    [ "$IS_LIB" != "n" ] && \
    [ "$IS_LIB" != "no" ]
do :; done

# Git init
git init > "/dev/null" 2>&1

# .gitignore
if [ -d ".git" ]; then
{
echo \
"obj
bin
$(basename "$PWD")
compile_flags.txt"
} > .gitignore
fi

# Make directories + files
# TODO: Makefile could probably be copied from a skel file
touch Makefile
mkdir -p src include obj res/doc
[ "$IS_LIB" = "y" ] || [ "$IS_LIB" = "yes" ] && mkdir bin test
[ "$IS_LIB" = "n" ] || [ "$IS_LIB" = "no" ] && touch src/main.c

# Download MIT license
lynx -dump "https://mit-license.org" | sed -n "1,22p;22q" \
    | sed "s/<.*>$/Neil Kingdom/g" | awk '{$1=$1};1' > LICENSE

# Relative path to include directory for clangd
{
echo \
"-I
include"
} > compile_flags.txt

# README
genreadme

# Doxyfile
doxygen -g "res/doc/Doxyfile" > "/dev/null" 2>&1
